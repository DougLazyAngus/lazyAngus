// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;

class InOutTransitioner
{
	// (fraction = 1) -> in.
	// (fraction = 0) -> out.
	float duration;
	float startTime;
	public bool movingIn { get; private set;}
	float fractionThruTransition;

	public bool useRealTime = false;

	public InOutTransitioner (float transitionDuration) {
		this.duration = transitionDuration;
		Reset (false);
	}

	public void Reset(bool inState) {
		startTime = 0;
		movingIn = inState;
		fractionThruTransition = 1;
	}

	float GetTime() {
		if (useRealTime) {
			return Time.realtimeSinceStartup;
		} else {
			return Time.time;
		}
	}

	public void UpdateTransitionFraction() {
		float now = GetTime ();
		fractionThruTransition = (now - startTime) / duration;
		fractionThruTransition = Mathf.Clamp (fractionThruTransition, 0, 1);
	}

	public void Transition(bool moveIn) {
		if (moveIn == movingIn) {
			return;
		}
		movingIn = moveIn;

		fractionThruTransition = 1 - fractionThruTransition;
		startTime = GetTime () - fractionThruTransition * duration;
	}

	public bool IsTransitioning() {
		return (fractionThruTransition != 1);
	}

	public float GetFractionIn() {
		if (movingIn) {
			return fractionThruTransition;
		} else {
			return (1 - fractionThruTransition);
		}
	}
}

