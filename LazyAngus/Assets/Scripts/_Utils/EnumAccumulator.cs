// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class EnumAccumulator<T>
{
	public Accumulator [] accumulators;

	public EnumAccumulator(int numValues) {
		accumulators = new Accumulator[numValues];

		for (int i = 0; i < numValues; i++) {
			accumulators[i] = new Accumulator();
		}
	}

	public void AddNew(int indexT, int value) {
		accumulators [(int)indexT].AddNew (value);
	}
	
	public void AddNew(int indexT) {
		accumulators [(int)indexT].AddNew ();
	}
	
	public void AddDerived(int indexT, int value) {
		accumulators [(int)indexT].AddDerived (value);
	}
	
	public void AddDerived(int indexT) {
		accumulators [(int)indexT].AddDerived ();
	}

	public void DeriveFrom(EnumAccumulator<T> otherAccumulator) {
		for (int i = 0; i < accumulators.Length; i++) {
			accumulators[i].DeriveFrom(otherAccumulator.accumulators[i]);
		}
	}

	public List<int> GetDistribution() {
		List<int> retVal = new List<int> ();

		for (int i = 0; i < accumulators.Length; i++) {
			for (int j = 0; j < accumulators[i].derivedCount; j++) {
				retVal.Add (i);
			}
		}
		return retVal;
	}
}

