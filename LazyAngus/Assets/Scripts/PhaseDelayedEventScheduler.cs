// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;

public class PhaseDelayedEventScheduler : MonoBehaviour {
	public GamePhaseState.GamePhaseType [] acceptablePhases;
	public float timeToWait;

	IEnumerator scheduledEvent;
	public delegate bool DelayedEventHandler();
	DelayedEventHandler delayedEvetHandler;

	public bool IsAcceptableGamePhase() {
		GamePhaseState.GamePhaseType t = GamePhaseState.instance.gamePhase;

		for (int i = 0; i < acceptablePhases.Length; i++) {
			if (acceptablePhases[i] == t) {
				return true;
			}
		}
		return false;
	}

	public bool OnPhaseChanged(DelayedEventHandler handler) {
		if (scheduledEvent != null) {
			StopCoroutine (scheduledEvent);
			scheduledEvent = null;
		}

		if (!IsAcceptableGamePhase ()) {
			return false;
		}

		delayedEvetHandler = handler;
		scheduledEvent = WaitAndFireEvent ();
		StartCoroutine (scheduledEvent);
		return true;
	}

	IEnumerator WaitAndFireEvent() {
		yield return new WaitForSeconds(timeToWait);
		scheduledEvent = null;

		if (IsAcceptableGamePhase()) {
			delayedEvetHandler ();
		}
	}
}

